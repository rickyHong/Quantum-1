# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, Baidu Inc
# This file is distributed under the same license as the paddle-quantum
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: paddle-quantum \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-05-17 11:08+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.1\n"

#: ../../source/paddle_quantum.loss.distance.rst:2
msgid "paddle\\_quantum.loss.distance"
msgstr ""

#: of paddle_quantum.loss.distance:1
msgid "The source file of the class for the distance."
msgstr ""

#: of paddle_quantum.loss.distance.StateFidelity:1
#: paddle_quantum.loss.distance.TraceDistance:1
msgid "Bases: :py:class:`~paddle_quantum.base.Operator`"
msgstr ""

#: of paddle_quantum.loss.distance.TraceDistance:1
msgid "The class of the loss function to compute the trace distance."
msgstr ""

#: of paddle_quantum.loss.distance.TraceDistance:3
msgid "This interface can make you using the trace distance as the loss function."
msgstr ""

#: of paddle_quantum.loss.distance.StateFidelity
#: paddle_quantum.loss.distance.StateFidelity.forward
#: paddle_quantum.loss.distance.TraceDistance
#: paddle_quantum.loss.distance.TraceDistance.forward
msgid "Parameters"
msgstr ""

#: of paddle_quantum.loss.distance.TraceDistance:5
msgid "The target state to be used to compute the trace distance."
msgstr ""

#: of paddle_quantum.loss.distance.TraceDistance.forward:1
msgid "Compute the trace distance between the input state and the target state."
msgstr ""

#: of paddle_quantum.loss.distance.StateFidelity.forward:3
#: paddle_quantum.loss.distance.TraceDistance.forward:3
msgid ""
"The value computed by this function can be used as a loss function to "
"optimize."
msgstr ""

#: of paddle_quantum.loss.distance.TraceDistance.forward:5
msgid ""
"The input state which will be used to compute the trace distance with the"
" target state."
msgstr ""

#: of paddle_quantum.loss.distance.StateFidelity.forward
#: paddle_quantum.loss.distance.TraceDistance.forward
msgid "Raises"
msgstr ""

#: of paddle_quantum.loss.distance.StateFidelity.forward:7
#: paddle_quantum.loss.distance.TraceDistance.forward:7
msgid "The backend is wrong or not supported."
msgstr ""

#: of paddle_quantum.loss.distance.StateFidelity.forward
#: paddle_quantum.loss.distance.TraceDistance.forward
msgid "Returns"
msgstr ""

#: of paddle_quantum.loss.distance.TraceDistance.forward:9
msgid "The trace distance between the input state and the target state."
msgstr ""

#: of paddle_quantum.loss.distance.StateFidelity.forward
#: paddle_quantum.loss.distance.TraceDistance.forward
msgid "Return type"
msgstr ""

#: of paddle_quantum.loss.distance.StateFidelity:1
msgid "The class of the loss function to compute the state fidelity."
msgstr ""

#: of paddle_quantum.loss.distance.StateFidelity:3
msgid "This interface can make you using the state fidelity as the loss function."
msgstr ""

#: of paddle_quantum.loss.distance.StateFidelity:5
msgid "The target state to be used to compute the state fidelity."
msgstr ""

#: of paddle_quantum.loss.distance.StateFidelity.forward:1
msgid "Compute the state fidelity between the input state and the target state."
msgstr ""

#: of paddle_quantum.loss.distance.StateFidelity.forward:5
msgid ""
"The input state which will be used to compute the state fidelity with the"
" target state."
msgstr ""

#: of paddle_quantum.loss.distance.StateFidelity.forward:9
msgid "The state fidelity between the input state and the target state."
msgstr ""

